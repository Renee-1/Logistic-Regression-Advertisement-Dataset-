# -*- coding: utf-8 -*-
"""Logistic Regression Project.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1w0nUPFonqtUp4E8EvPEkHcc7SdJOGRrw

___

# Logistic Regression Project 
In this project we will be working with an advertising data set, indicating whether or not a particular internet user clicked on an Advertisement on a company website. We will try to create a model that will predict whether or not they will click on an ad based off the features of that user.

This data set contains the following features:

* 'Daily Time Spent on Site': consumer time on site in minutes
* 'Age': cutomer age in years
* 'Area Income': Avg. Income of geographical area of consumer
* 'Daily Internet Usage': Avg. minutes a day consumer is on the internet
* 'Ad Topic Line': Headline of the advertisement
* 'City': City of consumer
* 'Male': Whether or not consumer was male
* 'Country': Country of consumer
* 'Timestamp': Time at which consumer clicked on Ad or closed window
* 'Clicked on Ad': 0 or 1 indicated clicking on Ad

## Import Libraries

**Imported a few libraries**
"""

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
# %matplotlib inline

"""## Get the Data
**Mounted the colab notebook with google drive and read the advertising.csv file and set it to a data frame called ad_data.**
"""

from google.colab import drive
drive.mount('/content/drive')

ad_data = pd.read_csv('/content/drive/MyDrive/DataSets/advertising.csv')

"""**Checked the head of ad_data**"""

ad_data.head()

"""**Used info and describe() on ad_data**"""

ad_data.info()

ad_data.describe()

"""## Exploratory Data Analysis

Used seaborn to explore the data!

**Created a histogram of the Age**
"""

sns.set_style('whitegrid')
ad_data['Age'].hist(bins=30)
plt.xlabel('Age')

"""**Generated a jointplot showing Area Income versus Age.**"""

sns.jointplot(x='Age',y='Area Income',data=ad_data)

"""**Created a jointplot showing the kde distributions of Daily Time spent on site vs. Age.**"""

sns.jointplot(x='Age',y='Daily Time Spent on Site',data=ad_data,color='red',kind='kde');

"""**Generated a jointplot of 'Daily Time Spent on Site' vs. 'Daily Internet Usage'**"""

sns.jointplot(x='Daily Time Spent on Site',y='Daily Internet Usage',data=ad_data,color='green')

"""**Generated a pairplot with the hue defined by the 'Clicked on Ad' column feature.**"""

sns.pairplot(ad_data,hue='Clicked on Ad',palette='bwr')

"""# Logistic Regression

**Now we will split the data into training set and testing set using train_test_split**
"""

from sklearn.model_selection import train_test_split

X = ad_data[['Daily Time Spent on Site', 'Age', 'Area Income','Daily Internet Usage', 'Male']]
y = ad_data['Clicked on Ad']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33, random_state=42)

"""**Trained and fit a logistic regression model on the training set.**"""

from sklearn.linear_model import LogisticRegression

logmodel = LogisticRegression()
logmodel.fit(X_train,y_train)

"""## Predictions and Evaluations
**Now predicted values for the testing data.**
"""

predictions = logmodel.predict(X_test)

"""**Generated a classification report for the model.**"""

from sklearn.metrics import classification_report

print(classification_report(y_test,predictions))

"""#The End"""